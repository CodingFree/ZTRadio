{\rtf1\ansi\ansicpg1252\deff0\uc1
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Liberation Sans;}
{\f1\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f2\fnil\fcharset0\fprq0\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red255\green255\blue255;}
{\stylesheet
{\s6\fi-431\li720\sbasedon28\snext28 Contents 1;}
{\s7\fi-431\li1440\sbasedon28\snext28 Contents 2;}
{\s1\fi-431\li720 Arrowhead List;}
{\s27\fi-431\li720\sbasedon28 Lower Roman List;}
{\s29\tx431\sbasedon20\snext28 Numbered Heading 1;}
{\s30\tx431\sbasedon21\snext28 Numbered Heading 2;}
{\s12\fi-431\li720 Diamond List;}
{\s9\fi-431\li2880\sbasedon28\snext28 Contents 4;}
{\s8\fi-431\li2160\sbasedon28\snext28 Contents 3;}
{\s31\tx431\sbasedon22\snext28 Numbered Heading 3;}
{\s32\fi-431\li720 Numbered List;}
{\s15\sbasedon28 Endnote Text;}
{\*\cs14\fs20\super Endnote Reference;}
{\s4\fi-431\li720 Bullet List;}
{\s5\tx1584\sbasedon29\snext28 Chapter Heading;}
{\s35\fi-431\li720 Square List;}
{\s11\fi-431\li720 Dashed List;}
{\s22\sb440\sa60\f0\fs24\b\sbasedon28\snext28 Heading 3;}
{\s37\fi-431\li720 Tick List;}
{\s24\fi-431\li720 Heart List;}
{\s40\fi-431\li720\sbasedon32 Upper Roman List;}
{\s39\fi-431\li720\sbasedon32 Upper Case List;}
{\s16\fi-288\li288\fs20\sbasedon28 Footnote;}
{\s19\fi-431\li720 Hand List;}
{\s18\fs20\sbasedon28 Footnote Text;}
{\s20\sb440\sa60\f0\fs34\b\sbasedon28\snext28 Heading 1;}
{\s21\sb440\sa60\f0\fs28\b\sbasedon28\snext28 Heading 2;}
{\s10\qc\sb240\sa120\f0\fs32\b\sbasedon28\snext28 Contents Header;}
{\s23\sb440\sa60\f0\fs24\b\sbasedon28\snext28 Heading 4;}
{\s28\f1\fs24 Normal;}
{\s26\fi-431\li720\sbasedon32 Lower Case List;}
{\s2\li1440\ri1440\sa120\sbasedon28 Block Text;}
{\s33\f2\sbasedon28 Plain Text;}
{\s34\tx1584\sbasedon29\snext28 Section Heading;}
{\s25\fi-431\li720 Implies List;}
{\s3\fi-431\li720 Box List;}
{\s36\fi-431\li720 Star List;}
{\*\cs17\fs20\super Footnote Reference;}
{\s38\fi-431\li720 Triangle List;}
{\s13\fi-288\li288\sbasedon28 Endnote;}}
{\*\listtable
{\list\listtemplateid1014\listsimple{\listlevel\levelnfc0\levelstartat1\levelspace0\levelfollow0{\leveltext\'02\'00.;}{\levelnumbers\'01;}}\listid1002}}
{\*\listoverridetable
{\listoverride\listoverridecount0\listid1002\levelnfc0\levelstartat1\levelspace0\levelfollow0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\ls1}}

\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\*\rdf}{\info\uc1}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\pgncont\ltrsect
\pard\plain\ltrpar\ql\sb440\sa60\s20\itap0{\s20\f0\fs34\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Laboratory 3}{\s20\f0\fs34\b\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 1.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistparentid0\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Introduction}{\s30\f0\fs28\b\lang1033{\*\listtag1003}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This exercise will introduce the basic concepts to understand how to create new blocks for GNU Radio and how to install them in GNU Radio Companion. These blocks are useful to simplify the design of a processing system but it can be used to add a new functionality that it is not included by the default blocks or that does not meet the requirements for the system. For example, if some specific filter is not included in the default blocks, it could be easily implemented using Python and imported to GNU Radio Companion.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These blocks are known as "}{\s28\f1\fs24\lang1033{\*\listtag0}out-of-tree module}{\s28\f1\fs24\lang1033{\*\listtag0}\uc1\u8221\'94 and many of these blocks can be found at the }{\s28\f1\fs24\lang1033{\*\listtag0}Comprehensive GNU Radio Archive Network}{\s28\f1\fs20\super\lang1033{\*\listtag0}\chftn}{\footnote
\pard\plain\ltrpar\ql\fi-288\li288\s16\itap0{\s16\f1\fs20\lang1033{\*\listtag0}\chftn}{\s16\f1\fs20\lang1033{\*\listtag0}\tab }{\s16\f1\fs20\lang1033{\*\listtag0}Comprehensive GNU Radio Archive Network: http://www.cgran.org}}{\s28\f1\fs24\lang1033{\*\listtag0}. It is worth mentioning that those blocks follow some conventions and style-guides, for example they include some naming conventions}{\s28\f1\fs20\super\lang1033{\*\listtag0}\chftn}{\footnote
\pard\plain\ltrpar\ql\fi-288\li288\s16\itap0{\s16\f1\fs20\lang1033{\*\listtag0}\chftn}{\s16\f1\fs20\lang1033{\*\listtag1}\tab }{\s16\f1\fs20\lang1033{\*\listtag0}Blocks Coding Style}{\s16\f1\fs20\lang1033{\*\listtag1}: }{\s16\f1\fs20\lang1033{\*\listtag0}http://gnuradio.org/redmine/projects/gnuradio/wiki/BlocksCodingGuide}}{\s28\f1\fs24\lang1033{\*\listtag0}.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 2.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Creating a new block}{\s30\f0\fs28\b\lang1033{\*\listtag1005}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The script gr_modtool simplifies some of the tasks to developed a new block. Usually, those task involve editing configuration files, such as makefiles, and gr_modtool simplifies it by editing them and by using boilerplates. Some of its options can be checked by using the command:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It explains that in order to create a new out-of-tree module, it needs the command newmod. To obtain more information about those commands, the requested one should be added to the help command, for example:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure1}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The command needs a name to create a new module:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 2}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This module could include one or more blocks. For example, it could have a block for transmission, another one for reception. Because of that, a module could be understood as a project. There are some options that are needed to create a new block:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 3}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If they are not specified, they may be asked interactively. There are two options that are relevant, the type of the block (-t) and the language that will be used to create the block, in this case Python but it could be also C++. }{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The types define the ratio between the input and the output and set some restrictions for that. For example, an interpolator will have a relative rate greater than one, while the decimator will have a relative rate less than one. The type \uc1\u8220\'93sync\uc1\u8221\'94 is used when the amount of input data will generate the same amount of output data.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 4}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The gr_modtool script will create the basic structure for the block, including the configuration files, the manifests and the templates. The Python code for this new block will be inside of the folder python, while the folder docs will have the documentation of the block and the grc folder will include the XML manifest used by GNU Radio Companion:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 5}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Python file will contain the code for the block. The name of the block finishes with a \uc1\u8220\'93_ff\uc1\u8221\'94 as a convention, which specifies that the block will use input data and output whose type will be float for both of them.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch For the shake of simplicity, the code will be replaced by this one:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 6}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 3.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Defining the constructor}{\s30\f0\fs28\b\lang1033{\*\listtag1008}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The import function has been already explained in the previous examples, they can be skipped until the init function. It is a constructor that has two arguments: the first one is mandatory, it is a reference to the own object, it is used to have visibility to the whole scope of the object. The second argument will be the integer that will be used to multiply the amplitude of the signal.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 7}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following lines are using the properties inherited from the parent type. The parent type is }{\s28\f1\fs24\lang1033{\*\listtag0}gr.sync_block and it is a default block of GNU Radio, it is the base type for any block used in GNU Radio. It will need three arguments in its constructor: the name of the block, an input vector and an output vector:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 8}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The symbols \uc0\u-257 <+...+> mean that it is a placeholder created automatically by gr_modtool. Since it will use a vector of float elements, the type should be numpy.float32.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 9}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The last line only assigns the argument to the properties of the current object:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 10}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 4.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Creating the function}{\s30\f0\fs28\b\lang1033{\*\listtag1010}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The function work will have the code corresponding to the functionality of three block. It requires again a reference to the own object, self, and it takes two additional arguments: the input and the output of the function. The in0 and out variables are used simply to rename the arguments in a shorter way:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 11}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The input vector can be multiplied by the multiple and assigned to the output. This output }{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 12}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 5.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Editing the XML configuration}{\s30\f0\fs28\b\lang1033{\*\listtag1011}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Inside of the \uc1\u8220\'93grc\uc1\u8221\'94 folder, there is a XML file. This file is used by GNU Radio Companion to define the properties of the block. There will be one XML file for each block in the folder:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 13}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Some properties, such as the name or the category of the block, can be edited in the following lines. The key needs to be unique because it will identify the block, if there are two blocks with the same key it will lead into an error:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgure.14}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The \uc1\u8220\'93param\uc1\u8221\'94 nodes define each argument of the block. In this example there is only one block named \uc1\u8220\'93multiple\uc1\u8221\'94, but if there were more arguments, there should be one node for each argument of the function. The multiple needs to have the same type that was specified in the Python code: The same will happen with the sink and the source:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 15}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
{\listtext\pard\sb440\sa60 6.	}\pard\plain{\ltrpar\ql\sb440\sa60\s30{\*\abilist\abilistid1002\abilistlevel1\abistartat1{\abifieldfont Liberation Sans}{\abilistdecimal }{\abilistdelim %L.}{\abiliststyle Numbered List}}{\*\pn\pnql\pnstart1\pnlvlbody\pndec{\pntxtb }{\pntxta .}}\ls1\ilvl0\itap0\tx431{\s30\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Compiling and installing the module}{\s30\f0\fs28\b\lang1033{\*\listtag1012}\par}
}\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In order to compile the module, it is a good practice to create a build folder inside of the main folder of the module. The compiler will generate a lot of files and creating a new folder will keep the rest of the project clean.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 16}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The project t can be compiled using \uc1\u8220\'93cmake\uc1\u8221\'94 and \uc1\u8220\'93make\uc1\u8221\'94 inside of this folder:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 17}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Once it has finished compiling the module, it can be installed using \uc1\u8220\'93make install\uc1\u8221\'94 as an administrator. It will copy the XML and Python files into the proper folder in the system,  usually /usr/local/share/gnuradio/grc/blocks/ for the XML file and /usr/local/lib/python2.7/dist-packages/ for the Python files.}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch At this point the module will be available in GNU Radio Companion:}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 19}{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\s28\itap0{\s28\f1\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch figure 20}{\s28\f1\fs24\lang1033{\*\listtag0}\par}}